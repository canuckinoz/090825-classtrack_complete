{"ast":null,"code":"var _jsxFileName = \"/Users/Kevin/Downloads/090825 classtrack_complete/src/features/Garden/GardenDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGlobalContext } from '../../context/GlobalState';\n\n/**\n * GardenDashboard visualises student growth as a garden.  Each log\n * contributes to a flower’s growth and encourages positive reinforcement.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GardenDashboard() {\n  _s();\n  const {\n    state\n  } = useGlobalContext();\n  const logs = state.logs;\n\n  // Aggregate positive and negative logs by student\n  const studentSummary = {};\n  logs.forEach(log => {\n    const {\n      student,\n      type\n    } = log;\n    if (!studentSummary[student]) studentSummary[student] = {\n      positive: 0,\n      negative: 0\n    };\n    studentSummary[student][type] += 1;\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"p-6 bg-secondary-light rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Student Garden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), Object.keys(studentSummary).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No logs recorded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: Object.entries(studentSummary).map(([student, counts]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-white rounded shadow flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 h-16 rounded-full bg-gradient-to-b from-green-300 to-green-500 mb-2 flex items-center justify-center text-white font-semibold\",\n          children: student.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium mb-1\",\n          children: student\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-green-700\",\n          children: [\"Positive: \", counts.positive]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-red-600\",\n          children: [\"Negative: \", counts.negative]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, student, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(GardenDashboard, \"kTO3G/HqWghaQvM9xL4HWjKbZMA=\", false, function () {\n  return [useGlobalContext];\n});\n_c = GardenDashboard;\nvar _c;\n$RefreshReg$(_c, \"GardenDashboard\");","map":{"version":3,"names":["React","useGlobalContext","jsxDEV","_jsxDEV","GardenDashboard","_s","state","logs","studentSummary","forEach","log","student","type","positive","negative","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","map","counts","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/Kevin/Downloads/090825 classtrack_complete/src/features/Garden/GardenDashboard.jsx"],"sourcesContent":["import React from 'react';\nimport { useGlobalContext } from '../../context/GlobalState';\n\n/**\n * GardenDashboard visualises student growth as a garden.  Each log\n * contributes to a flower’s growth and encourages positive reinforcement.\n */\nexport default function GardenDashboard() {\n  const { state } = useGlobalContext();\n  const logs = state.logs;\n\n  // Aggregate positive and negative logs by student\n  const studentSummary = {};\n  logs.forEach((log) => {\n    const { student, type } = log;\n    if (!studentSummary[student]) studentSummary[student] = { positive: 0, negative: 0 };\n    studentSummary[student][type] += 1;\n  });\n\n  return (\n    <section className=\"p-6 bg-secondary-light rounded shadow\">\n      <h2 className=\"text-xl font-semibold mb-4\">Student Garden</h2>\n      {Object.keys(studentSummary).length === 0 && (\n        <p>No logs recorded yet.</p>\n      )}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {Object.entries(studentSummary).map(([student, counts]) => (\n          <div key={student} className=\"p-4 bg-white rounded shadow flex flex-col items-center\">\n            <div className=\"w-16 h-16 rounded-full bg-gradient-to-b from-green-300 to-green-500 mb-2 flex items-center justify-center text-white font-semibold\">\n              {student.charAt(0).toUpperCase()}\n            </div>\n            <p className=\"text-sm font-medium mb-1\">{student}</p>\n            <p className=\"text-xs text-green-700\">Positive: {counts.positive}</p>\n            <p className=\"text-xs text-red-600\">Negative: {counts.negative}</p>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,2BAA2B;;AAE5D;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAM,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EACpC,MAAMM,IAAI,GAAGD,KAAK,CAACC,IAAI;;EAEvB;EACA,MAAMC,cAAc,GAAG,CAAC,CAAC;EACzBD,IAAI,CAACE,OAAO,CAAEC,GAAG,IAAK;IACpB,MAAM;MAAEC,OAAO;MAAEC;IAAK,CAAC,GAAGF,GAAG;IAC7B,IAAI,CAACF,cAAc,CAACG,OAAO,CAAC,EAAEH,cAAc,CAACG,OAAO,CAAC,GAAG;MAAEE,QAAQ,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAE,CAAC;IACpFN,cAAc,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EACpC,CAAC,CAAC;EAEF,oBACET,OAAA;IAASY,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACxDb,OAAA;MAAIY,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7DC,MAAM,CAACC,IAAI,CAACd,cAAc,CAAC,CAACe,MAAM,KAAK,CAAC,iBACvCpB,OAAA;MAAAa,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5B,eACDjB,OAAA;MAAKY,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEK,MAAM,CAACG,OAAO,CAAChB,cAAc,CAAC,CAACiB,GAAG,CAAC,CAAC,CAACd,OAAO,EAAEe,MAAM,CAAC,kBACpDvB,OAAA;QAAmBY,SAAS,EAAC,wDAAwD;QAAAC,QAAA,gBACnFb,OAAA;UAAKY,SAAS,EAAC,oIAAoI;UAAAC,QAAA,EAChJL,OAAO,CAACgB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;QAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACNjB,OAAA;UAAGY,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EAAEL;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrDjB,OAAA;UAAGY,SAAS,EAAC,wBAAwB;UAAAC,QAAA,GAAC,YAAU,EAACU,MAAM,CAACb,QAAQ;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrEjB,OAAA;UAAGY,SAAS,EAAC,sBAAsB;UAAAC,QAAA,GAAC,YAAU,EAACU,MAAM,CAACZ,QAAQ;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAN3DT,OAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACf,EAAA,CAhCuBD,eAAe;EAAA,QACnBH,gBAAgB;AAAA;AAAA4B,EAAA,GADZzB,eAAe;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}