{"ast":null,"code":"var _jsxFileName = \"/Users/Kevin/Downloads/090825 classtrack_complete/src/features/QuickLog/QuickLog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useGlobalContext } from '../../context/GlobalState';\n\n/**\n * QuickLog provides a fast way to log behaviour within two clicks.  It\n * collects the minimal information necessary and dispatches an action\n * to add the log to the global state and persists it to the server.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuickLog() {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useGlobalContext();\n  const [student, setStudent] = useState('');\n  const [type, setType] = useState('positive');\n  const [description, setDescription] = useState('');\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const newLog = {\n      student,\n      type,\n      description,\n      timestamp: Date.now()\n    };\n    try {\n      const response = await fetch('/api/logs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${state.token}`\n        },\n        body: JSON.stringify(newLog)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save log');\n      }\n      dispatch({\n        type: 'ADD_LOG',\n        payload: newLog\n      });\n      // clear form\n      setStudent('');\n      setType('positive');\n      setDescription('');\n    } catch (err) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: err.message\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"p-4 bg-white rounded shadow space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quicklog-student\",\n        className: \"block text-sm font-medium mb-1\",\n        children: \"Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quicklog-student\",\n        type: \"text\",\n        value: student,\n        onChange: e => setStudent(e.target.value),\n        className: \"w-full border border-gray-300 rounded px-2 py-1\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quicklog-type\",\n        className: \"block text-sm font-medium mb-1\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"quicklog-type\",\n        value: type,\n        onChange: e => setType(e.target.value),\n        className: \"w-full border border-gray-300 rounded px-2 py-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"positive\",\n          children: \"Positive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"negative\",\n          children: \"Negative\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quicklog-description\",\n        className: \"block text-sm font-medium mb-1\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"quicklog-description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: \"w-full border border-gray-300 rounded px-2 py-1\",\n        rows: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full bg-primary-dark text-white py-2 rounded hover:bg-primary text-base font-medium\",\n      children: \"Log Behaviour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(QuickLog, \"3vym7v/RsdwWqO4scRx0mBWYAak=\", false, function () {\n  return [useGlobalContext];\n});\n_c = QuickLog;\nvar _c;\n$RefreshReg$(_c, \"QuickLog\");","map":{"version":3,"names":["React","useState","useGlobalContext","jsxDEV","_jsxDEV","QuickLog","_s","state","dispatch","student","setStudent","type","setType","description","setDescription","handleSubmit","e","preventDefault","newLog","timestamp","Date","now","response","fetch","method","headers","Authorization","token","body","JSON","stringify","ok","Error","payload","err","message","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","required","rows","_c","$RefreshReg$"],"sources":["/Users/Kevin/Downloads/090825 classtrack_complete/src/features/QuickLog/QuickLog.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useGlobalContext } from '../../context/GlobalState';\n\n/**\n * QuickLog provides a fast way to log behaviour within two clicks.  It\n * collects the minimal information necessary and dispatches an action\n * to add the log to the global state and persists it to the server.\n */\nexport default function QuickLog() {\n  const { state, dispatch } = useGlobalContext();\n  const [student, setStudent] = useState('');\n  const [type, setType] = useState('positive');\n  const [description, setDescription] = useState('');\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const newLog = { student, type, description, timestamp: Date.now() };\n    try {\n      const response = await fetch('/api/logs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${state.token}`\n        },\n        body: JSON.stringify(newLog)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save log');\n      }\n      dispatch({ type: 'ADD_LOG', payload: newLog });\n      // clear form\n      setStudent('');\n      setType('positive');\n      setDescription('');\n    } catch (err) {\n      dispatch({ type: 'SET_ERROR', payload: err.message });\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-4 bg-white rounded shadow space-y-4\">\n      <div>\n        <label htmlFor=\"quicklog-student\" className=\"block text-sm font-medium mb-1\">Student</label>\n        <input\n          id=\"quicklog-student\"\n          type=\"text\"\n          value={student}\n          onChange={(e) => setStudent(e.target.value)}\n          className=\"w-full border border-gray-300 rounded px-2 py-1\"\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"quicklog-type\" className=\"block text-sm font-medium mb-1\">Type</label>\n        <select\n          id=\"quicklog-type\"\n          value={type}\n          onChange={(e) => setType(e.target.value)}\n          className=\"w-full border border-gray-300 rounded px-2 py-1\"\n        >\n          <option value=\"positive\">Positive</option>\n          <option value=\"negative\">Negative</option>\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"quicklog-description\" className=\"block text-sm font-medium mb-1\">Description</label>\n        <textarea\n          id=\"quicklog-description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"w-full border border-gray-300 rounded px-2 py-1\"\n          rows=\"2\"\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"w-full bg-primary-dark text-white py-2 rounded hover:bg-primary text-base font-medium\"\n      >\n        Log Behaviour\n      </button>\n    </form>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,QAAQ,2BAA2B;;AAE5D;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EAC9C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,UAAU,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,eAAec,YAAYA,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAG;MAAET,OAAO;MAAEE,IAAI;MAAEE,WAAW;MAAEM,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC;IACpE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;QACxCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUnB,KAAK,CAACoB,KAAK;QACtC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,MAAM;MAC7B,CAAC,CAAC;MACF,IAAI,CAACI,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;MACAxB,QAAQ,CAAC;QAAEG,IAAI,EAAE,SAAS;QAAEsB,OAAO,EAAEf;MAAO,CAAC,CAAC;MAC9C;MACAR,UAAU,CAAC,EAAE,CAAC;MACdE,OAAO,CAAC,UAAU,CAAC;MACnBE,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZ1B,QAAQ,CAAC;QAAEG,IAAI,EAAE,WAAW;QAAEsB,OAAO,EAAEC,GAAG,CAACC;MAAQ,CAAC,CAAC;IACvD;EACF;EAEA,oBACE/B,OAAA;IAAMgC,QAAQ,EAAErB,YAAa;IAACsB,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBAC7ElC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAOmC,OAAO,EAAC,kBAAkB;QAACF,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5FvC,OAAA;QACEwC,EAAE,EAAC,kBAAkB;QACrBjC,IAAI,EAAC,MAAM;QACXkC,KAAK,EAAEpC,OAAQ;QACfqC,QAAQ,EAAG9B,CAAC,IAAKN,UAAU,CAACM,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;QAC5CR,SAAS,EAAC,iDAAiD;QAC3DW,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAOmC,OAAO,EAAC,eAAe;QAACF,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtFvC,OAAA;QACEwC,EAAE,EAAC,eAAe;QAClBC,KAAK,EAAElC,IAAK;QACZmC,QAAQ,EAAG9B,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;QACzCR,SAAS,EAAC,iDAAiD;QAAAC,QAAA,gBAE3DlC,OAAA;UAAQyC,KAAK,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1CvC,OAAA;UAAQyC,KAAK,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNvC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAOmC,OAAO,EAAC,sBAAsB;QAACF,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpGvC,OAAA;QACEwC,EAAE,EAAC,sBAAsB;QACzBC,KAAK,EAAEhC,WAAY;QACnBiC,QAAQ,EAAG9B,CAAC,IAAKF,cAAc,CAACE,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;QAChDR,SAAS,EAAC,iDAAiD;QAC3DY,IAAI,EAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvC,OAAA;MACEO,IAAI,EAAC,QAAQ;MACb0B,SAAS,EAAC,uFAAuF;MAAAC,QAAA,EAClG;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACrC,EAAA,CA1EuBD,QAAQ;EAAA,QACFH,gBAAgB;AAAA;AAAAgD,EAAA,GADtB7C,QAAQ;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}